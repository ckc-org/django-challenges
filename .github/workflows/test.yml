on:
  push:
    branches: [ '*' ]

jobs:
  test:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Detect Challenge Directory
      run: |
        echo "Branch: $(git branch --show-current)"
        git diff refs/remotes/origin/master HEAD --name-only
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/"
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1 | uniq -c
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1 | uniq -c | sort -nr
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1 | uniq -c | sort -nr | sed "s/^[ \t]*//" 
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1 | uniq -c | sort -nr | sed "s/^[ \t]*//" | cut -d " " -f 5
        git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1 | uniq -c | sort -nr | sed "s/^[ \t]*//" | cut -d " " -f 5 | head -n 1
        CHALLENGE_DIR=`git diff refs/remotes/origin/master HEAD --name-only | grep -v .github | grep ".*/" | cut -d "/" -f 1 | uniq -c | sort -nr | sed "s/^[ \t]*//" | cut -d " " -f 5 | head -n 1`
        if [ -z "$CHALLENGE_DIR" ]; then echo "CHALLENGE_DIR variable not set." && exit 1; fi
        echo "CHALLENGE_DIR: $CHALLENGE_DIR"
        echo "CHALLENGE_DIR=$CHALLENGE_DIR" >> $GITHUB_ENV
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        # libldap2-dev and libsasl2-dev are for ldap
        sudo apt-get update
        sudo apt-get install libldap2-dev libsasl2-dev
        pip install -r $CHALLENGE_DIR/requirements.dev.txt
    - name: Lint with flake8
      run: |
        cd $CHALLENGE_DIR/src/backend && flake8
    - name: Test with pytest
      env:
        DB_HOST: localhost
      run: |
        # make some dummy files so tests run fine
        sudo mkdir -p /frontend/generated/static
        cd $CHALLENGE_DIR/src/backend
        ./manage.py collectstatic --noinput
        pytest --cov-fail-under=100
